apiVersion: aws.boundless.software/v1alpha1
kind: Ec2
metadata:
  name: example-ec2
spec:
  provider:
    region: us-east-1
  # securityGroup:
  #   name: example-security-group
  #   vpcId: <id>
  #   tags:
  #     tag: tag
  #     tag2: wwwee
  #   egress:
  #     - fromPort: 30
  #       protocol: All
  #       toPort: 40
  #       cidrBlocks:
  #         - 10.0.0.0/16
  #   ingress:
  #     - fromPort: 60
  #       toPort: 80
  #       protocol: TCP
  #       cidrBlocks:
  #         - 0.0.0.0/16
  instance:
    imageId: <id>
    # instanceProfileArn: arn:aws:iam::<id>:instance-profile/example-profile
    instanceType: t3.medium
    keyName: example-key
    securityGroupIds:
      - <id>
      - <id>
    subnetId: <id>
    tags:
      Project: ExampleProject
      userData: example-data
      test: example-test
      tagg: example-tag
      yeaah: example-yeah
    volumes:
      - deviceName: /dev/sda1
        volumeSize: 200
        volumeId: <id>
        volumeType: gp2
        deleteOnTermination: true
  # loadBalancer:
  #   name: "example-load-balancer"
  #   scheme: "internet-facing"
  #   type: "application"
  #   instanceId: <id>
  #   subnets:
  #     - <id>
  #     - <id>
  #     # - <id>
  #   securityGroups:
  #     - <id>
  #     - <id>
  #   tags:
  #     tagKey1: "example-value1"
  #     tagKey2: "example-value2"
  #     tag 2: "example-value3"
  #     tag 3: "example-value4"
  #     tag 4: "example-value5"
  # targetGroup:
  #   name: "example-target-group"
  #   port: 80
  #   tags:
  #     tagKey1: "example-value1"
  #     # tagKey2: "example-value2"
  #     # tag 2: "example-value3"
  #     # tag 3: "example-value4"
  #     # tag 4: "example-value5"
  #   protocol: "HTTP"
  #   vpcId: <id>
  #   targetType: "instance"
  #   healthCheck:
  #     protocol: "HTTP"
  #     port: "traffic-port"
  #     path: "/"
  #     intervalSeconds: 30
  #     timeoutSeconds: 5
  #     healthyThreshold: 5
  #     unhealthyThreshold: 2
  #     successCodes: "200-299"
